#!/usr/bin/env bash
### .functions - more complicated aliases, basically

## load private, non-tracked, functions
if [ -f ~/.functions_priv ]; then source ~/.functions_priv; fi
if [ -f ~/.functions_priv_drupal ]; then source ~/.functions_priv_drupal; fi
if [ -f ~/.functions_priv_iterm ]; then source ~/.functions_priv_iterm; fi
##########################################################

# list: display all functions in custom dotfiles
function funclist {
  if hash ag 2>/dev/null; then
    ag '(function )([A-Za-z0-9_-]+)' ~/.functions* --nonumbers
  else
    echo 'Error: Missing ag (silver searcher). Cannot display functions.'
  fi
}

# about: display info about current system
function about {
  if hash neofetch 2>/dev/null; then
    neofetch
  else
    if hash archey 2>/dev/null; then
      archey -c $1
    else
      if [ -f /etc/os-release ]; then
        cat /etc/os-release
      else
        if [ -f /proc/version ]; then
          cat /proc/version
        else
          uname -a
        fi
      fi
    fi
  fi
}

# ansicolors: display all fg and bg ansi color escape codes
function ansicolors {
  for attr in $(seq 0 1); do
    for fg in $(seq 30 37); do
      for bg in $(seq 40 47); do
        printf "\033[$attr;${bg};${fg}m$attr;$fg;$bg\033[m "
      done
      echo
    done
  done
}

# countdown: start a full-screen countdown
function countdown() {
  start=${1:60}
  now=$(date +%s)
  watch -tn1 echo '$((now-$(date +%s)+start))'
}

# dummy: create dummy binary file
function dummy() {
  dd if=/dev/urandom bs=1024 count=$1 of=dummy
}

# fun terminal thingies
function fun() {
  if [ $# -eq 0 ]; then
    echo "FFFFFFFFFFFUUUUUUUUUUUUUUNNNNNNNNNNNN!!!!!!"
    echo "Wasn't that fun? Maybe add 'colors' or 'snow' as an argument next time."
  fi

  while [[ $# -gt 0 ]]
  do
  key="$1"
    case $key in
      colors)
      # color show in your terminal
      # source: https://twitter.com/climagic/status/817405740772184065
      yes "$(seq 16 231)" | while read i;
      do printf "\x1b[48;5;${i}m\n";
      sleep .02;
      done
      ;;
      snow)
      # make it snow in your terminal
      # source: http://climagic.org/coolstuff/let-it-snow.html
      export LINES COLUMNS;
      clear;
      while :;
      do echo $LINES $COLUMNS $(($RANDOM%$COLUMNS));
      sleep 0.1;
      done|gawk '{a[$3]=0;for(x in a) {o=a[x];a[x]=a[x]+1;printf "\033[%s;%sH ",o,x; printf "\033[%s;%sH*\033[0;0H",a[x],x;}}'
      ;;
    esac
    shift
  done
}

# get_rand_port: get random available local port for local webservers
function get_rand_port {
  netstat -aln | awk '
    $6 == "LISTEN" {
      if ($4 ~ "[.:][0-9]+$") {
        split($4, a, /[:.]/);
        port = a[length(a)];
        p[port] = 1
      }
    }
    END {
      for (i = 3000; i < 65000 && p[i]; i++){};
      if (i == 65000) {exit 1};
      print i
    }
  '
}

# simple http servers for local directory in various flavors
function httphp {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  php -S 127.0.0.1:$rport;
}
function httpy {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  python -m SimpleHTTPServer $rport;
}
function httnode {
  rport=$(get_rand_port);
  http-server -o -p $rport;
}
function httruby {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  ruby -run -e httpd . -p $rport;
}

# play rainymood music
function rainymood {
  FILE=$((RANDOM%4))
  URL="https://rainymood.com/audio1110/${FILE}.ogg"
  mpv "$URL" && rainymood
}

# roll a die
function roll() {
  if [ $# -ge 1 ]; then
    echo $(($RANDOM % $1 + 1))
  else
    echo $(($RANDOM % 2))
  fi
}
