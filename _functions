#!/usr/bin/env bash
### .functions - more complicated aliases, basically

## load private, non-tracked, functions
if [ -f ~/.functions_priv ]; then source ~/.functions_priv; fi
if [ -f ~/.functions_iterm ]; then source ~/.functions_iterm; fi

###################################################

# about - info about current system
function about() {
  if hash archey 2>/dev/null; then
    archey -c $1
  else
    if [ -f /proc/version ]; then
      cat /proc/version
    else
      uname -a
    fi
  fi
}

# get random local port
function get_rand_port() {
  netstat -aln | awk '
    $6 == "LISTEN" {
      if ($4 ~ "[.:][0-9]+$") {
        split($4, a, /[:.]/);
        port = a[length(a)];
        p[port] = 1
      }
    }
    END {
      for (i = 3000; i < 65000 && p[i]; i++){};
      if (i == 65000) {exit 1};
      print i
    }
  '
}

# simple http servers for local directory in various flavors
function httphp() {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  php -S 127.0.0.1:$rport;
}
function httpy() {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  python -m SimpleHTTPServer $rport;
}
function httruby() {
  rport=$(get_rand_port);
  open http://localhost:$rport;
  ruby -run -e httpd . -p $rport;
}
function httnode() {
  rport=$(get_rand_port);
  http-server -o -p $rport;
}

# jekyll serve script
function jekyll-serve {
  rport=$(get_rand_port);
  jekyll serve --port $rport
}

# Convert all mp3 files in directory to ogg
function mpg2ogg {
  MP3_DIR="."

  if [ "$1" == "-o" ]; then
    OGG_DIR=$2
  else
    OGG_DIR="./ogg"
  fi

  if [ ! -d $OGG_DIR ]; then
    mkdir $OGG_DIR
  fi
  
  if [ "$3" == "--overwrite" ]; then
    OVERWRITE="-y "
  fi
  if [ "$3" == "--no-overwrite" ]; then
    OVERWRITE="-n "
  fi 

  for f in *.mp3; do
    ffmpeg -nostats ${OVERWRITE}-i "$f" -c:a libvorbis -q:a 4 "${OGG_DIR}/${f%.mp3}.ogg";
  done

  if [ "$4" == "--zip" ]; then
    (cd "${MP3_DIR}" && tar -cvf "${MP3_DIR}/_rorasuketo-ost-mp3.zip" *.mp3)
    (cd "${OGG_DIR}" && tar -cvf "${OGG_DIR}/_rorasuketo-ost-ogg.zip" *.ogg)
  fi
}

# Always list directory contents and set title upon 'cd'
function tab-cd() {
  builtin cd "$@";
  ls -lFah;
  tabTitle ${PWD##*/};
}
